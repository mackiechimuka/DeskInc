<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>